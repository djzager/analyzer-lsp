name: Build and Test

on: ["push", "pull_request"]

jobs: 
  test:
    strategy:
      matrix:
        include:
        - runs_on: ubuntu-latest
          goos: linux
          goarch: amd64
          artifact_name: linux-x86_64
        - runs_on: ubuntu-latest
          goos: linux
          goarch: arm64
          artifact_name: linux-aarch64
        - runs_on: macos-latest
          goos: darwin
          goarch: amd64
          artifact_name: macos-x86_64
        - runs_on: macos-latest
          goos: darwin
          goarch: arm64
          artifact_name: macos-arm64
        - runs_on: windows-latest
          goos: windows
          goarch: amd64
          artifact_name: windows-X64
    runs-on: ${{ matrix.runs_on }}
    steps:
      - uses: actions/checkout@v5
      - name: Set up Go
        uses: actions/setup-go@v6
        with:
          go-version: '1.23.9'

      - name: Test
        run: go test -v ./...

      - name: Build binaries
        env:
          GOOS: ${{ matrix.goos }}
          GOARCH: ${{ matrix.goarch }}
        run: make build

      - name: Create binary archive (Windows)
        if: matrix.goos == 'windows'
        run: |
          cd build
          Compress-Archive -Path * -DestinationPath ../konveyor-analyzer-binaries-${{ matrix.goos }}-${{ matrix.goarch }}.zip

      - name: Create binary archive (Unix)
        if: matrix.goos != 'windows'
        run: tar -czf konveyor-analyzer-binaries-${{ matrix.goos }}-${{ matrix.goarch }}.tar.gz -C build .

      - name: Upload binary archive
        uses: actions/upload-artifact@v4
        with:
          name: konveyor-analyzer-binaries-${{ matrix.goos }}-${{ matrix.goarch }}${{ matrix.goos == 'windows' && '.zip' || '.tar.gz' }}
          path: konveyor-analyzer-binaries-${{ matrix.goos }}-${{ matrix.goarch }}${{ matrix.goos == 'windows' && '.zip' || '.tar.gz' }}
          retention-days: 30

